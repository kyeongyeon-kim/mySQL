-- 직원 이름, 속한 부서 이름
SELECT A.FIRST_NAME, A.LAST_NAME, B.DEPARTMENT_NAME FROM employees AS A
LEFT JOIN departments AS B ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
WHERE B.DEPARTMENT_NAME = 'IT';

SELECT * FROM locations;
SELECT * FROM departments;
-- 'United States of America' 에서 근무하고 있는 직원 목록
SELECT DEPARTMENT_ID FROM locations AS A
LEFT JOIN departments AS B ON A.LOCATION_ID = B.LOCATION_ID
WHERE COUNTRY_ID = 'US';

SELECT * FROM employees
WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM locations AS A
LEFT JOIN departments AS B ON A.LOCATION_ID = B.LOCATION_ID
WHERE COUNTRY_ID = 'US');

SELECT A.FIRST_NAME, A.LAST_NAME, D.COUNTRY_NAME FROM employees AS A
LEFT OUTER JOIN departments AS B ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
LEFT OUTER JOIN locations AS C ON B.LOCATION_ID = C.LOCATION_ID
LEFT OUTER JOIN countries AS D ON C.COUNTRY_ID = D.COUNTRY_ID
WHERE COUNTRY_NAME = 'United States of America';

-- 위 테이블 몇 명 있음?

SELECT COUNT(*) FROM employees AS A
LEFT OUTER JOIN departments AS B ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
LEFT OUTER JOIN locations AS C ON B.LOCATION_ID = C.LOCATION_ID
LEFT OUTER JOIN countries AS D ON C.COUNTRY_ID = D.COUNTRY_ID
WHERE COUNTRY_NAME = 'United States of America';

-- 국가별로 몇 명이 속해 있는지?
SELECT D.COUNTRY_NAME, COUNT(*) FROM employees AS A
LEFT OUTER JOIN departments AS B ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
LEFT OUTER JOIN locations AS C ON B.LOCATION_ID = C.LOCATION_ID
LEFT OUTER JOIN countries AS D ON C.COUNTRY_ID = D.COUNTRY_ID
GROUP BY D.COUNTRY_NAME;

-- 자기가 속한 부서의 임금 평균보다 높은 임금을 받는 직원 조회하기
SELECT * FROM employees AS A
LEFT OUTER JOIN departments AS B ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
WHERE A.SALARY > (SELECT AVG(SALARY) FROM employees);

SELECT DEPARTMENT_ID, AVG(salary) AS avg
FROM employees
GROUP BY DEPARTMENT_ID;

SELECT A.FIRST_NAME, A.LAST_NAME, A.SALARY, B.avg FROM employees AS A
LEFT JOIN (SELECT DEPARTMENT_ID, AVG(salary) AS avg
		FROM employees
		GROUP BY DEPARTMENT_ID) AS B ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
WHERE A.salary > B.avg;

